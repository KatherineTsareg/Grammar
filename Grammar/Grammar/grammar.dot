digraph Automaton {
  0 [label="0\n$accept -> . s $end"]
  0 -> 1 [style=solid label="\"Main\""]
  0 -> 2 [style=solid label="\"Function\""]
  0 -> 3 [style=solid label="\"new line\""]
  0 -> 4 [style=dashed label="s"]
  0 -> 5 [style=dashed label="function_list"]
  0 -> 6 [style=dashed label="function"]
  1 [label="1\ns -> \"Main\" . construction"]
  1 -> 7 [style=solid label="\"{\""]
  1 -> 8 [style=dashed label="construction"]
  2 [label="2\nfunction -> \"Function\" . \"function id\" '(' argument_list ')' construction\nfunction -> \"Function\" . \"function id\" '(' ')' construction"]
  2 -> 9 [style=solid label="\"function id\""]
  3 [label="3\nfunction -> \"new line\" ."]
  4 [label="4\n$accept -> s . $end"]
  4 -> 10 [style=solid label="$end"]
  5 [label="5\ns -> function_list . \"Main\" construction\nfunction_list -> function_list . function"]
  5 -> 11 [style=solid label="\"Main\""]
  5 -> 2 [style=solid label="\"Function\""]
  5 -> 3 [style=solid label="\"new line\""]
  5 -> 12 [style=dashed label="function"]
  6 [label="6\nfunction_list -> function ."]
  7 [label="7\nconstruction -> \"{\" . statement_list \"}\"\nconstruction -> \"{\" . \"}\""]
  7 -> 13 [style=solid label="\"Return\""]
  7 -> 14 [style=solid label="\"Read\""]
  7 -> 15 [style=solid label="\"Print\""]
  7 -> 16 [style=solid label="\"Do\""]
  7 -> 17 [style=solid label="\"While\""]
  7 -> 18 [style=solid label="\"For\""]
  7 -> 19 [style=solid label="\"If\""]
  7 -> 20 [style=solid label="\"Const\""]
  7 -> 21 [style=solid label="\"Float\""]
  7 -> 22 [style=solid label="\"Int\""]
  7 -> 23 [style=solid label="\"Char\""]
  7 -> 24 [style=solid label="\"bool\""]
  7 -> 25 [style=solid label="\"String\""]
  7 -> 26 [style=solid label="\"function id\""]
  7 -> 27 [style=solid label="\"id\""]
  7 -> 28 [style=solid label="\"}\""]
  7 -> 29 [style=solid label="\"new line\""]
  7 -> 30 [style=solid label="'<'"]
  7 -> 31 [style=solid label="'!'"]
  7 -> 32 [style=solid label="'('"]
  7 -> 33 [style=dashed label="fuction_call"]
  7 -> 34 [style=dashed label="statement_list"]
  7 -> 35 [style=dashed label="statement"]
  7 -> 36 [style=dashed label="if_statement"]
  7 -> 37 [style=dashed label="one_if_statement"]
  7 -> 38 [style=dashed label="while_statement"]
  7 -> 39 [style=dashed label="for_statement"]
  7 -> 40 [style=dashed label="paren_expr"]
  7 -> 41 [style=dashed label="expression"]
  7 -> 42 [style=dashed label="arithmetic_expression"]
  7 -> 43 [style=dashed label="bool_expression"]
  7 -> 44 [style=dashed label="assignment_expression"]
  7 -> 45 [style=dashed label="init_expression"]
  7 -> 46 [style=dashed label="list_init_expression"]
  7 -> 47 [style=dashed label="string_init_expression"]
  7 -> 48 [style=dashed label="init_list_row"]
  7 -> 49 [style=dashed label="index"]
  7 -> 50 [style=dashed label="data"]
  7 -> 51 [style=dashed label="list_type"]
  7 -> 52 [style=dashed label="atomic_type"]
  7 -> 53 [style=dashed label="numeric_type"]
  8 [label="8\ns -> \"Main\" construction ."]
  9 [label="9\nfunction -> \"Function\" \"function id\" . '(' argument_list ')' construction\nfunction -> \"Function\" \"function id\" . '(' ')' construction"]
  9 -> 54 [style=solid label="'('"]
  10 [label="10\n$accept -> s $end ."]
  11 [label="11\ns -> function_list \"Main\" . construction"]
  11 -> 7 [style=solid label="\"{\""]
  11 -> 55 [style=dashed label="construction"]
  12 [label="12\nfunction_list -> function_list function ."]
  13 [label="13\nstatement -> \"Return\" . '(' data ')' \"new line\""]
  13 -> 56 [style=solid label="'('"]
  14 [label="14\nstatement -> \"Read\" . '(' data ')' \"new line\""]
  14 -> 57 [style=solid label="'('"]
  15 [label="15\nstatement -> \"Print\" . '(' data ')' \"new line\""]
  15 -> 58 [style=solid label="'('"]
  16 [label="16\nwhile_statement -> \"Do\" . construction \"While\" '(' bool_expression ')' \"new line\""]
  16 -> 7 [style=solid label="\"{\""]
  16 -> 59 [style=dashed label="construction"]
  17 [label="17\nwhile_statement -> \"While\" . '(' bool_expression ')' construction"]
  17 -> 60 [style=solid label="'('"]
  18 [label="18\nfor_statement -> \"For\" . '(' \"id\" '=' numeric_type ',' bool_expression ',' assignment_expression ')' construction\nfor_statement -> \"For\" . '(' \"id\" ',' bool_expression ',' assignment_expression ')' construction"]
  18 -> 61 [style=solid label="'('"]
  19 [label="19\none_if_statement -> \"If\" . '(' bool_expression ')' construction"]
  19 -> 62 [style=solid label="'('"]
  20 [label="20\nassignment_expression -> \"Const\" . \"id\" '=' data"]
  20 -> 63 [style=solid label="\"id\""]
  21 [label="21\nnumeric_type -> \"Float\" ."]
  22 [label="22\nnumeric_type -> \"Int\" ."]
  23 [label="23\natomic_type -> \"Char\" ."]
  24 [label="24\natomic_type -> \"bool\" ."]
  25 [label="25\nlist_type -> \"String\" ."]
  26 [label="26\nfuction_call -> \"function id\" . '(' list_row ')'"]
  26 -> 64 [style=solid label="'('"]
  27 [label="27\nlist_init_expression -> \"id\" . '(' arithmetic_expression ')' of_type\nstring_init_expression -> \"id\" . '(' arithmetic_expression ')'\nindex -> \"id\" . multidimensional_index\ndata -> \"id\" ."]
  27 -> 65 [style=solid label="'('"]
  27 -> 66 [style=solid label="'['"]
  27 -> 67 [style=dashed label="multidimensional_index"]
  27 -> 68 [style=dashed label="one_dimensional_index"]
  28 [label="28\nconstruction -> \"{\" \"}\" ."]
  29 [label="29\nstatement -> \"new line\" ."]
  30 [label="30\ninit_list_row -> '<' . list_row '>'"]
  30 -> 21 [style=solid label="\"Float\""]
  30 -> 22 [style=solid label="\"Int\""]
  30 -> 23 [style=solid label="\"Char\""]
  30 -> 24 [style=solid label="\"bool\""]
  30 -> 25 [style=solid label="\"String\""]
  30 -> 26 [style=solid label="\"function id\""]
  30 -> 69 [style=solid label="\"id\""]
  30 -> 30 [style=solid label="'<'"]
  30 -> 32 [style=solid label="'('"]
  30 -> 33 [style=dashed label="fuction_call"]
  30 -> 40 [style=dashed label="paren_expr"]
  30 -> 48 [style=dashed label="init_list_row"]
  30 -> 70 [style=dashed label="list_row"]
  30 -> 49 [style=dashed label="index"]
  30 -> 71 [style=dashed label="data"]
  30 -> 51 [style=dashed label="list_type"]
  30 -> 52 [style=dashed label="atomic_type"]
  30 -> 53 [style=dashed label="numeric_type"]
  31 [label="31\nbool_expression -> '!' . bool_expression"]
  31 -> 21 [style=solid label="\"Float\""]
  31 -> 22 [style=solid label="\"Int\""]
  31 -> 23 [style=solid label="\"Char\""]
  31 -> 24 [style=solid label="\"bool\""]
  31 -> 25 [style=solid label="\"String\""]
  31 -> 26 [style=solid label="\"function id\""]
  31 -> 69 [style=solid label="\"id\""]
  31 -> 30 [style=solid label="'<'"]
  31 -> 31 [style=solid label="'!'"]
  31 -> 32 [style=solid label="'('"]
  31 -> 33 [style=dashed label="fuction_call"]
  31 -> 40 [style=dashed label="paren_expr"]
  31 -> 72 [style=dashed label="bool_expression"]
  31 -> 48 [style=dashed label="init_list_row"]
  31 -> 49 [style=dashed label="index"]
  31 -> 73 [style=dashed label="data"]
  31 -> 51 [style=dashed label="list_type"]
  31 -> 52 [style=dashed label="atomic_type"]
  31 -> 53 [style=dashed label="numeric_type"]
  32 [label="32\nparen_expr -> '(' . expression ')'"]
  32 -> 21 [style=solid label="\"Float\""]
  32 -> 22 [style=solid label="\"Int\""]
  32 -> 23 [style=solid label="\"Char\""]
  32 -> 24 [style=solid label="\"bool\""]
  32 -> 25 [style=solid label="\"String\""]
  32 -> 26 [style=solid label="\"function id\""]
  32 -> 69 [style=solid label="\"id\""]
  32 -> 30 [style=solid label="'<'"]
  32 -> 31 [style=solid label="'!'"]
  32 -> 32 [style=solid label="'('"]
  32 -> 33 [style=dashed label="fuction_call"]
  32 -> 40 [style=dashed label="paren_expr"]
  32 -> 74 [style=dashed label="expression"]
  32 -> 42 [style=dashed label="arithmetic_expression"]
  32 -> 43 [style=dashed label="bool_expression"]
  32 -> 48 [style=dashed label="init_list_row"]
  32 -> 49 [style=dashed label="index"]
  32 -> 75 [style=dashed label="data"]
  32 -> 51 [style=dashed label="list_type"]
  32 -> 52 [style=dashed label="atomic_type"]
  32 -> 53 [style=dashed label="numeric_type"]
  33 [label="33\ndata -> fuction_call ."]
  34 [label="34\nconstruction -> \"{\" statement_list . \"}\"\nstatement_list -> statement_list . statement"]
  34 -> 13 [style=solid label="\"Return\""]
  34 -> 14 [style=solid label="\"Read\""]
  34 -> 15 [style=solid label="\"Print\""]
  34 -> 16 [style=solid label="\"Do\""]
  34 -> 17 [style=solid label="\"While\""]
  34 -> 18 [style=solid label="\"For\""]
  34 -> 19 [style=solid label="\"If\""]
  34 -> 20 [style=solid label="\"Const\""]
  34 -> 21 [style=solid label="\"Float\""]
  34 -> 22 [style=solid label="\"Int\""]
  34 -> 23 [style=solid label="\"Char\""]
  34 -> 24 [style=solid label="\"bool\""]
  34 -> 25 [style=solid label="\"String\""]
  34 -> 26 [style=solid label="\"function id\""]
  34 -> 27 [style=solid label="\"id\""]
  34 -> 76 [style=solid label="\"}\""]
  34 -> 29 [style=solid label="\"new line\""]
  34 -> 30 [style=solid label="'<'"]
  34 -> 31 [style=solid label="'!'"]
  34 -> 32 [style=solid label="'('"]
  34 -> 33 [style=dashed label="fuction_call"]
  34 -> 77 [style=dashed label="statement"]
  34 -> 36 [style=dashed label="if_statement"]
  34 -> 37 [style=dashed label="one_if_statement"]
  34 -> 38 [style=dashed label="while_statement"]
  34 -> 39 [style=dashed label="for_statement"]
  34 -> 40 [style=dashed label="paren_expr"]
  34 -> 41 [style=dashed label="expression"]
  34 -> 42 [style=dashed label="arithmetic_expression"]
  34 -> 43 [style=dashed label="bool_expression"]
  34 -> 44 [style=dashed label="assignment_expression"]
  34 -> 45 [style=dashed label="init_expression"]
  34 -> 46 [style=dashed label="list_init_expression"]
  34 -> 47 [style=dashed label="string_init_expression"]
  34 -> 48 [style=dashed label="init_list_row"]
  34 -> 49 [style=dashed label="index"]
  34 -> 50 [style=dashed label="data"]
  34 -> 51 [style=dashed label="list_type"]
  34 -> 52 [style=dashed label="atomic_type"]
  34 -> 53 [style=dashed label="numeric_type"]
  35 [label="35\nstatement_list -> statement ."]
  36 [label="36\nstatement -> if_statement ."]
  37 [label="37\nif_statement -> one_if_statement .\nif_statement -> one_if_statement . elif_statement\nif_statement -> one_if_statement . one_else_statement\nif_statement -> one_if_statement . elif_statement one_else_statement"]
  37 -> 78 [style=solid label="\"Else\""]
  37 -> 79 [style=solid label="\"Elif\""]
  37 -> 80 [style=dashed label="elif_statement"]
  37 -> 81 [style=dashed label="one_elif_statement"]
  37 -> 82 [style=dashed label="one_else_statement"]
  38 [label="38\nstatement -> while_statement ."]
  39 [label="39\nstatement -> for_statement ."]
  40 [label="40\ndata -> paren_expr ."]
  41 [label="41\nstatement -> expression . \"new line\""]
  41 -> 83 [style=solid label="\"new line\""]
  42 [label="42\nexpression -> arithmetic_expression .\narithmetic_expression -> arithmetic_expression . '+' data\narithmetic_expression -> arithmetic_expression . '-' data\narithmetic_expression -> arithmetic_expression . '*' data\narithmetic_expression -> arithmetic_expression . '/' data\narithmetic_expression -> arithmetic_expression . '%' data"]
  42 -> 84 [style=solid label="'+'"]
  42 -> 85 [style=solid label="'-'"]
  42 -> 86 [style=solid label="'*'"]
  42 -> 87 [style=solid label="'/'"]
  42 -> 88 [style=solid label="'%'"]
  43 [label="43\nexpression -> bool_expression .\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  43 -> 89 [style=solid label="\"Or\""]
  43 -> 90 [style=solid label="\"And\""]
  43 -> 91 [style=solid label="\"<=\""]
  43 -> 92 [style=solid label="\">=\""]
  43 -> 93 [style=solid label="\"==\""]
  43 -> 94 [style=solid label="\"!=\""]
  43 -> 95 [style=solid label="'<'"]
  43 -> 96 [style=solid label="'>'"]
  44 [label="44\nstatement -> assignment_expression . \"new line\""]
  44 -> 97 [style=solid label="\"new line\""]
  45 [label="45\nstatement -> init_expression . \"new line\""]
  45 -> 98 [style=solid label="\"new line\""]
  46 [label="46\ninit_expression -> list_init_expression ."]
  47 [label="47\ninit_expression -> string_init_expression ."]
  48 [label="48\ndata -> init_list_row ."]
  49 [label="49\ndata -> index ."]
  50 [label="50\narithmetic_expression -> data .\nbool_expression -> data .\nassignment_expression -> data . '=' data\nassignment_expression -> data . \"+=\" data\nassignment_expression -> data . \"-=\" data\nassignment_expression -> data . \"/=\" data\nassignment_expression -> data . \"*=\" data\nassignment_expression -> data . \"%=\" data\nassignment_expression -> data . \"++\"\nassignment_expression -> data . \"--\""]
  50 -> 99 [style=solid label="\"+=\""]
  50 -> 100 [style=solid label="\"-=\""]
  50 -> 101 [style=solid label="\"*=\""]
  50 -> 102 [style=solid label="\"/=\""]
  50 -> 103 [style=solid label="\"%=\""]
  50 -> 104 [style=solid label="\"++\""]
  50 -> 105 [style=solid label="\"--\""]
  50 -> 106 [style=solid label="'='"]
  51 [label="51\ndata -> list_type ."]
  52 [label="52\nlist_type -> atomic_type ."]
  53 [label="53\natomic_type -> numeric_type ."]
  54 [label="54\nfunction -> \"Function\" \"function id\" '(' . argument_list ')' construction\nfunction -> \"Function\" \"function id\" '(' . ')' construction"]
  54 -> 107 [style=solid label="\"id\""]
  54 -> 108 [style=solid label="')'"]
  54 -> 109 [style=dashed label="argument_list"]
  55 [label="55\ns -> function_list \"Main\" construction ."]
  56 [label="56\nstatement -> \"Return\" '(' . data ')' \"new line\""]
  56 -> 21 [style=solid label="\"Float\""]
  56 -> 22 [style=solid label="\"Int\""]
  56 -> 23 [style=solid label="\"Char\""]
  56 -> 24 [style=solid label="\"bool\""]
  56 -> 25 [style=solid label="\"String\""]
  56 -> 26 [style=solid label="\"function id\""]
  56 -> 69 [style=solid label="\"id\""]
  56 -> 30 [style=solid label="'<'"]
  56 -> 32 [style=solid label="'('"]
  56 -> 33 [style=dashed label="fuction_call"]
  56 -> 40 [style=dashed label="paren_expr"]
  56 -> 48 [style=dashed label="init_list_row"]
  56 -> 49 [style=dashed label="index"]
  56 -> 110 [style=dashed label="data"]
  56 -> 51 [style=dashed label="list_type"]
  56 -> 52 [style=dashed label="atomic_type"]
  56 -> 53 [style=dashed label="numeric_type"]
  57 [label="57\nstatement -> \"Read\" '(' . data ')' \"new line\""]
  57 -> 21 [style=solid label="\"Float\""]
  57 -> 22 [style=solid label="\"Int\""]
  57 -> 23 [style=solid label="\"Char\""]
  57 -> 24 [style=solid label="\"bool\""]
  57 -> 25 [style=solid label="\"String\""]
  57 -> 26 [style=solid label="\"function id\""]
  57 -> 69 [style=solid label="\"id\""]
  57 -> 30 [style=solid label="'<'"]
  57 -> 32 [style=solid label="'('"]
  57 -> 33 [style=dashed label="fuction_call"]
  57 -> 40 [style=dashed label="paren_expr"]
  57 -> 48 [style=dashed label="init_list_row"]
  57 -> 49 [style=dashed label="index"]
  57 -> 111 [style=dashed label="data"]
  57 -> 51 [style=dashed label="list_type"]
  57 -> 52 [style=dashed label="atomic_type"]
  57 -> 53 [style=dashed label="numeric_type"]
  58 [label="58\nstatement -> \"Print\" '(' . data ')' \"new line\""]
  58 -> 21 [style=solid label="\"Float\""]
  58 -> 22 [style=solid label="\"Int\""]
  58 -> 23 [style=solid label="\"Char\""]
  58 -> 24 [style=solid label="\"bool\""]
  58 -> 25 [style=solid label="\"String\""]
  58 -> 26 [style=solid label="\"function id\""]
  58 -> 69 [style=solid label="\"id\""]
  58 -> 30 [style=solid label="'<'"]
  58 -> 32 [style=solid label="'('"]
  58 -> 33 [style=dashed label="fuction_call"]
  58 -> 40 [style=dashed label="paren_expr"]
  58 -> 48 [style=dashed label="init_list_row"]
  58 -> 49 [style=dashed label="index"]
  58 -> 112 [style=dashed label="data"]
  58 -> 51 [style=dashed label="list_type"]
  58 -> 52 [style=dashed label="atomic_type"]
  58 -> 53 [style=dashed label="numeric_type"]
  59 [label="59\nwhile_statement -> \"Do\" construction . \"While\" '(' bool_expression ')' \"new line\""]
  59 -> 113 [style=solid label="\"While\""]
  60 [label="60\nwhile_statement -> \"While\" '(' . bool_expression ')' construction"]
  60 -> 21 [style=solid label="\"Float\""]
  60 -> 22 [style=solid label="\"Int\""]
  60 -> 23 [style=solid label="\"Char\""]
  60 -> 24 [style=solid label="\"bool\""]
  60 -> 25 [style=solid label="\"String\""]
  60 -> 26 [style=solid label="\"function id\""]
  60 -> 69 [style=solid label="\"id\""]
  60 -> 30 [style=solid label="'<'"]
  60 -> 31 [style=solid label="'!'"]
  60 -> 32 [style=solid label="'('"]
  60 -> 33 [style=dashed label="fuction_call"]
  60 -> 40 [style=dashed label="paren_expr"]
  60 -> 114 [style=dashed label="bool_expression"]
  60 -> 48 [style=dashed label="init_list_row"]
  60 -> 49 [style=dashed label="index"]
  60 -> 73 [style=dashed label="data"]
  60 -> 51 [style=dashed label="list_type"]
  60 -> 52 [style=dashed label="atomic_type"]
  60 -> 53 [style=dashed label="numeric_type"]
  61 [label="61\nfor_statement -> \"For\" '(' . \"id\" '=' numeric_type ',' bool_expression ',' assignment_expression ')' construction\nfor_statement -> \"For\" '(' . \"id\" ',' bool_expression ',' assignment_expression ')' construction"]
  61 -> 115 [style=solid label="\"id\""]
  62 [label="62\none_if_statement -> \"If\" '(' . bool_expression ')' construction"]
  62 -> 21 [style=solid label="\"Float\""]
  62 -> 22 [style=solid label="\"Int\""]
  62 -> 23 [style=solid label="\"Char\""]
  62 -> 24 [style=solid label="\"bool\""]
  62 -> 25 [style=solid label="\"String\""]
  62 -> 26 [style=solid label="\"function id\""]
  62 -> 69 [style=solid label="\"id\""]
  62 -> 30 [style=solid label="'<'"]
  62 -> 31 [style=solid label="'!'"]
  62 -> 32 [style=solid label="'('"]
  62 -> 33 [style=dashed label="fuction_call"]
  62 -> 40 [style=dashed label="paren_expr"]
  62 -> 116 [style=dashed label="bool_expression"]
  62 -> 48 [style=dashed label="init_list_row"]
  62 -> 49 [style=dashed label="index"]
  62 -> 73 [style=dashed label="data"]
  62 -> 51 [style=dashed label="list_type"]
  62 -> 52 [style=dashed label="atomic_type"]
  62 -> 53 [style=dashed label="numeric_type"]
  63 [label="63\nassignment_expression -> \"Const\" \"id\" . '=' data"]
  63 -> 117 [style=solid label="'='"]
  64 [label="64\nfuction_call -> \"function id\" '(' . list_row ')'"]
  64 -> 21 [style=solid label="\"Float\""]
  64 -> 22 [style=solid label="\"Int\""]
  64 -> 23 [style=solid label="\"Char\""]
  64 -> 24 [style=solid label="\"bool\""]
  64 -> 25 [style=solid label="\"String\""]
  64 -> 26 [style=solid label="\"function id\""]
  64 -> 69 [style=solid label="\"id\""]
  64 -> 30 [style=solid label="'<'"]
  64 -> 32 [style=solid label="'('"]
  64 -> 33 [style=dashed label="fuction_call"]
  64 -> 40 [style=dashed label="paren_expr"]
  64 -> 48 [style=dashed label="init_list_row"]
  64 -> 118 [style=dashed label="list_row"]
  64 -> 49 [style=dashed label="index"]
  64 -> 71 [style=dashed label="data"]
  64 -> 51 [style=dashed label="list_type"]
  64 -> 52 [style=dashed label="atomic_type"]
  64 -> 53 [style=dashed label="numeric_type"]
  65 [label="65\nlist_init_expression -> \"id\" '(' . arithmetic_expression ')' of_type\nstring_init_expression -> \"id\" '(' . arithmetic_expression ')'"]
  65 -> 21 [style=solid label="\"Float\""]
  65 -> 22 [style=solid label="\"Int\""]
  65 -> 23 [style=solid label="\"Char\""]
  65 -> 24 [style=solid label="\"bool\""]
  65 -> 25 [style=solid label="\"String\""]
  65 -> 26 [style=solid label="\"function id\""]
  65 -> 69 [style=solid label="\"id\""]
  65 -> 30 [style=solid label="'<'"]
  65 -> 32 [style=solid label="'('"]
  65 -> 33 [style=dashed label="fuction_call"]
  65 -> 40 [style=dashed label="paren_expr"]
  65 -> 119 [style=dashed label="arithmetic_expression"]
  65 -> 48 [style=dashed label="init_list_row"]
  65 -> 49 [style=dashed label="index"]
  65 -> 120 [style=dashed label="data"]
  65 -> 51 [style=dashed label="list_type"]
  65 -> 52 [style=dashed label="atomic_type"]
  65 -> 53 [style=dashed label="numeric_type"]
  66 [label="66\none_dimensional_index -> '[' . arithmetic_expression ']'"]
  66 -> 21 [style=solid label="\"Float\""]
  66 -> 22 [style=solid label="\"Int\""]
  66 -> 23 [style=solid label="\"Char\""]
  66 -> 24 [style=solid label="\"bool\""]
  66 -> 25 [style=solid label="\"String\""]
  66 -> 26 [style=solid label="\"function id\""]
  66 -> 69 [style=solid label="\"id\""]
  66 -> 30 [style=solid label="'<'"]
  66 -> 32 [style=solid label="'('"]
  66 -> 33 [style=dashed label="fuction_call"]
  66 -> 40 [style=dashed label="paren_expr"]
  66 -> 121 [style=dashed label="arithmetic_expression"]
  66 -> 48 [style=dashed label="init_list_row"]
  66 -> 49 [style=dashed label="index"]
  66 -> 120 [style=dashed label="data"]
  66 -> 51 [style=dashed label="list_type"]
  66 -> 52 [style=dashed label="atomic_type"]
  66 -> 53 [style=dashed label="numeric_type"]
  67 [label="67\nindex -> \"id\" multidimensional_index .\nmultidimensional_index -> multidimensional_index . one_dimensional_index"]
  67 -> 66 [style=solid label="'['"]
  67 -> 122 [style=dashed label="one_dimensional_index"]
  68 [label="68\nmultidimensional_index -> one_dimensional_index ."]
  69 [label="69\nindex -> \"id\" . multidimensional_index\ndata -> \"id\" ."]
  69 -> 66 [style=solid label="'['"]
  69 -> 67 [style=dashed label="multidimensional_index"]
  69 -> 68 [style=dashed label="one_dimensional_index"]
  70 [label="70\ninit_list_row -> '<' list_row . '>'\nlist_row -> list_row . ',' data"]
  70 -> 123 [style=solid label="'>'"]
  70 -> 124 [style=solid label="','"]
  71 [label="71\nlist_row -> data ."]
  72 [label="72\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> '!' bool_expression .\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  72 -> 93 [style=solid label="\"==\""]
  72 -> 94 [style=solid label="\"!=\""]
  73 [label="73\nbool_expression -> data ."]
  74 [label="74\nparen_expr -> '(' expression . ')'"]
  74 -> 125 [style=solid label="')'"]
  75 [label="75\narithmetic_expression -> data .\nbool_expression -> data ."]
  76 [label="76\nconstruction -> \"{\" statement_list \"}\" ."]
  77 [label="77\nstatement_list -> statement_list statement ."]
  78 [label="78\none_else_statement -> \"Else\" . construction"]
  78 -> 7 [style=solid label="\"{\""]
  78 -> 126 [style=dashed label="construction"]
  79 [label="79\none_elif_statement -> \"Elif\" . '(' bool_expression ')' construction"]
  79 -> 127 [style=solid label="'('"]
  80 [label="80\nif_statement -> one_if_statement elif_statement .\nif_statement -> one_if_statement elif_statement . one_else_statement\nelif_statement -> elif_statement . one_elif_statement"]
  80 -> 78 [style=solid label="\"Else\""]
  80 -> 79 [style=solid label="\"Elif\""]
  80 -> 128 [style=dashed label="one_elif_statement"]
  80 -> 129 [style=dashed label="one_else_statement"]
  81 [label="81\nelif_statement -> one_elif_statement ."]
  82 [label="82\nif_statement -> one_if_statement one_else_statement ."]
  83 [label="83\nstatement -> expression \"new line\" ."]
  84 [label="84\narithmetic_expression -> arithmetic_expression '+' . data"]
  84 -> 21 [style=solid label="\"Float\""]
  84 -> 22 [style=solid label="\"Int\""]
  84 -> 23 [style=solid label="\"Char\""]
  84 -> 24 [style=solid label="\"bool\""]
  84 -> 25 [style=solid label="\"String\""]
  84 -> 26 [style=solid label="\"function id\""]
  84 -> 69 [style=solid label="\"id\""]
  84 -> 30 [style=solid label="'<'"]
  84 -> 32 [style=solid label="'('"]
  84 -> 33 [style=dashed label="fuction_call"]
  84 -> 40 [style=dashed label="paren_expr"]
  84 -> 48 [style=dashed label="init_list_row"]
  84 -> 49 [style=dashed label="index"]
  84 -> 130 [style=dashed label="data"]
  84 -> 51 [style=dashed label="list_type"]
  84 -> 52 [style=dashed label="atomic_type"]
  84 -> 53 [style=dashed label="numeric_type"]
  85 [label="85\narithmetic_expression -> arithmetic_expression '-' . data"]
  85 -> 21 [style=solid label="\"Float\""]
  85 -> 22 [style=solid label="\"Int\""]
  85 -> 23 [style=solid label="\"Char\""]
  85 -> 24 [style=solid label="\"bool\""]
  85 -> 25 [style=solid label="\"String\""]
  85 -> 26 [style=solid label="\"function id\""]
  85 -> 69 [style=solid label="\"id\""]
  85 -> 30 [style=solid label="'<'"]
  85 -> 32 [style=solid label="'('"]
  85 -> 33 [style=dashed label="fuction_call"]
  85 -> 40 [style=dashed label="paren_expr"]
  85 -> 48 [style=dashed label="init_list_row"]
  85 -> 49 [style=dashed label="index"]
  85 -> 131 [style=dashed label="data"]
  85 -> 51 [style=dashed label="list_type"]
  85 -> 52 [style=dashed label="atomic_type"]
  85 -> 53 [style=dashed label="numeric_type"]
  86 [label="86\narithmetic_expression -> arithmetic_expression '*' . data"]
  86 -> 21 [style=solid label="\"Float\""]
  86 -> 22 [style=solid label="\"Int\""]
  86 -> 23 [style=solid label="\"Char\""]
  86 -> 24 [style=solid label="\"bool\""]
  86 -> 25 [style=solid label="\"String\""]
  86 -> 26 [style=solid label="\"function id\""]
  86 -> 69 [style=solid label="\"id\""]
  86 -> 30 [style=solid label="'<'"]
  86 -> 32 [style=solid label="'('"]
  86 -> 33 [style=dashed label="fuction_call"]
  86 -> 40 [style=dashed label="paren_expr"]
  86 -> 48 [style=dashed label="init_list_row"]
  86 -> 49 [style=dashed label="index"]
  86 -> 132 [style=dashed label="data"]
  86 -> 51 [style=dashed label="list_type"]
  86 -> 52 [style=dashed label="atomic_type"]
  86 -> 53 [style=dashed label="numeric_type"]
  87 [label="87\narithmetic_expression -> arithmetic_expression '/' . data"]
  87 -> 21 [style=solid label="\"Float\""]
  87 -> 22 [style=solid label="\"Int\""]
  87 -> 23 [style=solid label="\"Char\""]
  87 -> 24 [style=solid label="\"bool\""]
  87 -> 25 [style=solid label="\"String\""]
  87 -> 26 [style=solid label="\"function id\""]
  87 -> 69 [style=solid label="\"id\""]
  87 -> 30 [style=solid label="'<'"]
  87 -> 32 [style=solid label="'('"]
  87 -> 33 [style=dashed label="fuction_call"]
  87 -> 40 [style=dashed label="paren_expr"]
  87 -> 48 [style=dashed label="init_list_row"]
  87 -> 49 [style=dashed label="index"]
  87 -> 133 [style=dashed label="data"]
  87 -> 51 [style=dashed label="list_type"]
  87 -> 52 [style=dashed label="atomic_type"]
  87 -> 53 [style=dashed label="numeric_type"]
  88 [label="88\narithmetic_expression -> arithmetic_expression '%' . data"]
  88 -> 21 [style=solid label="\"Float\""]
  88 -> 22 [style=solid label="\"Int\""]
  88 -> 23 [style=solid label="\"Char\""]
  88 -> 24 [style=solid label="\"bool\""]
  88 -> 25 [style=solid label="\"String\""]
  88 -> 26 [style=solid label="\"function id\""]
  88 -> 69 [style=solid label="\"id\""]
  88 -> 30 [style=solid label="'<'"]
  88 -> 32 [style=solid label="'('"]
  88 -> 33 [style=dashed label="fuction_call"]
  88 -> 40 [style=dashed label="paren_expr"]
  88 -> 48 [style=dashed label="init_list_row"]
  88 -> 49 [style=dashed label="index"]
  88 -> 134 [style=dashed label="data"]
  88 -> 51 [style=dashed label="list_type"]
  88 -> 52 [style=dashed label="atomic_type"]
  88 -> 53 [style=dashed label="numeric_type"]
  89 [label="89\nbool_expression -> bool_expression \"Or\" . data"]
  89 -> 21 [style=solid label="\"Float\""]
  89 -> 22 [style=solid label="\"Int\""]
  89 -> 23 [style=solid label="\"Char\""]
  89 -> 24 [style=solid label="\"bool\""]
  89 -> 25 [style=solid label="\"String\""]
  89 -> 26 [style=solid label="\"function id\""]
  89 -> 69 [style=solid label="\"id\""]
  89 -> 30 [style=solid label="'<'"]
  89 -> 32 [style=solid label="'('"]
  89 -> 33 [style=dashed label="fuction_call"]
  89 -> 40 [style=dashed label="paren_expr"]
  89 -> 48 [style=dashed label="init_list_row"]
  89 -> 49 [style=dashed label="index"]
  89 -> 135 [style=dashed label="data"]
  89 -> 51 [style=dashed label="list_type"]
  89 -> 52 [style=dashed label="atomic_type"]
  89 -> 53 [style=dashed label="numeric_type"]
  90 [label="90\nbool_expression -> bool_expression \"And\" . data"]
  90 -> 21 [style=solid label="\"Float\""]
  90 -> 22 [style=solid label="\"Int\""]
  90 -> 23 [style=solid label="\"Char\""]
  90 -> 24 [style=solid label="\"bool\""]
  90 -> 25 [style=solid label="\"String\""]
  90 -> 26 [style=solid label="\"function id\""]
  90 -> 69 [style=solid label="\"id\""]
  90 -> 30 [style=solid label="'<'"]
  90 -> 32 [style=solid label="'('"]
  90 -> 33 [style=dashed label="fuction_call"]
  90 -> 40 [style=dashed label="paren_expr"]
  90 -> 48 [style=dashed label="init_list_row"]
  90 -> 49 [style=dashed label="index"]
  90 -> 136 [style=dashed label="data"]
  90 -> 51 [style=dashed label="list_type"]
  90 -> 52 [style=dashed label="atomic_type"]
  90 -> 53 [style=dashed label="numeric_type"]
  91 [label="91\nbool_expression -> bool_expression \"<=\" . data"]
  91 -> 21 [style=solid label="\"Float\""]
  91 -> 22 [style=solid label="\"Int\""]
  91 -> 23 [style=solid label="\"Char\""]
  91 -> 24 [style=solid label="\"bool\""]
  91 -> 25 [style=solid label="\"String\""]
  91 -> 26 [style=solid label="\"function id\""]
  91 -> 69 [style=solid label="\"id\""]
  91 -> 30 [style=solid label="'<'"]
  91 -> 32 [style=solid label="'('"]
  91 -> 33 [style=dashed label="fuction_call"]
  91 -> 40 [style=dashed label="paren_expr"]
  91 -> 48 [style=dashed label="init_list_row"]
  91 -> 49 [style=dashed label="index"]
  91 -> 137 [style=dashed label="data"]
  91 -> 51 [style=dashed label="list_type"]
  91 -> 52 [style=dashed label="atomic_type"]
  91 -> 53 [style=dashed label="numeric_type"]
  92 [label="92\nbool_expression -> bool_expression \">=\" . data"]
  92 -> 21 [style=solid label="\"Float\""]
  92 -> 22 [style=solid label="\"Int\""]
  92 -> 23 [style=solid label="\"Char\""]
  92 -> 24 [style=solid label="\"bool\""]
  92 -> 25 [style=solid label="\"String\""]
  92 -> 26 [style=solid label="\"function id\""]
  92 -> 69 [style=solid label="\"id\""]
  92 -> 30 [style=solid label="'<'"]
  92 -> 32 [style=solid label="'('"]
  92 -> 33 [style=dashed label="fuction_call"]
  92 -> 40 [style=dashed label="paren_expr"]
  92 -> 48 [style=dashed label="init_list_row"]
  92 -> 49 [style=dashed label="index"]
  92 -> 138 [style=dashed label="data"]
  92 -> 51 [style=dashed label="list_type"]
  92 -> 52 [style=dashed label="atomic_type"]
  92 -> 53 [style=dashed label="numeric_type"]
  93 [label="93\nbool_expression -> bool_expression \"==\" . data"]
  93 -> 21 [style=solid label="\"Float\""]
  93 -> 22 [style=solid label="\"Int\""]
  93 -> 23 [style=solid label="\"Char\""]
  93 -> 24 [style=solid label="\"bool\""]
  93 -> 25 [style=solid label="\"String\""]
  93 -> 26 [style=solid label="\"function id\""]
  93 -> 69 [style=solid label="\"id\""]
  93 -> 30 [style=solid label="'<'"]
  93 -> 32 [style=solid label="'('"]
  93 -> 33 [style=dashed label="fuction_call"]
  93 -> 40 [style=dashed label="paren_expr"]
  93 -> 48 [style=dashed label="init_list_row"]
  93 -> 49 [style=dashed label="index"]
  93 -> 139 [style=dashed label="data"]
  93 -> 51 [style=dashed label="list_type"]
  93 -> 52 [style=dashed label="atomic_type"]
  93 -> 53 [style=dashed label="numeric_type"]
  94 [label="94\nbool_expression -> bool_expression \"!=\" . data"]
  94 -> 21 [style=solid label="\"Float\""]
  94 -> 22 [style=solid label="\"Int\""]
  94 -> 23 [style=solid label="\"Char\""]
  94 -> 24 [style=solid label="\"bool\""]
  94 -> 25 [style=solid label="\"String\""]
  94 -> 26 [style=solid label="\"function id\""]
  94 -> 69 [style=solid label="\"id\""]
  94 -> 30 [style=solid label="'<'"]
  94 -> 32 [style=solid label="'('"]
  94 -> 33 [style=dashed label="fuction_call"]
  94 -> 40 [style=dashed label="paren_expr"]
  94 -> 48 [style=dashed label="init_list_row"]
  94 -> 49 [style=dashed label="index"]
  94 -> 140 [style=dashed label="data"]
  94 -> 51 [style=dashed label="list_type"]
  94 -> 52 [style=dashed label="atomic_type"]
  94 -> 53 [style=dashed label="numeric_type"]
  95 [label="95\nbool_expression -> bool_expression '<' . data"]
  95 -> 21 [style=solid label="\"Float\""]
  95 -> 22 [style=solid label="\"Int\""]
  95 -> 23 [style=solid label="\"Char\""]
  95 -> 24 [style=solid label="\"bool\""]
  95 -> 25 [style=solid label="\"String\""]
  95 -> 26 [style=solid label="\"function id\""]
  95 -> 69 [style=solid label="\"id\""]
  95 -> 30 [style=solid label="'<'"]
  95 -> 32 [style=solid label="'('"]
  95 -> 33 [style=dashed label="fuction_call"]
  95 -> 40 [style=dashed label="paren_expr"]
  95 -> 48 [style=dashed label="init_list_row"]
  95 -> 49 [style=dashed label="index"]
  95 -> 141 [style=dashed label="data"]
  95 -> 51 [style=dashed label="list_type"]
  95 -> 52 [style=dashed label="atomic_type"]
  95 -> 53 [style=dashed label="numeric_type"]
  96 [label="96\nbool_expression -> bool_expression '>' . data"]
  96 -> 21 [style=solid label="\"Float\""]
  96 -> 22 [style=solid label="\"Int\""]
  96 -> 23 [style=solid label="\"Char\""]
  96 -> 24 [style=solid label="\"bool\""]
  96 -> 25 [style=solid label="\"String\""]
  96 -> 26 [style=solid label="\"function id\""]
  96 -> 69 [style=solid label="\"id\""]
  96 -> 30 [style=solid label="'<'"]
  96 -> 32 [style=solid label="'('"]
  96 -> 33 [style=dashed label="fuction_call"]
  96 -> 40 [style=dashed label="paren_expr"]
  96 -> 48 [style=dashed label="init_list_row"]
  96 -> 49 [style=dashed label="index"]
  96 -> 142 [style=dashed label="data"]
  96 -> 51 [style=dashed label="list_type"]
  96 -> 52 [style=dashed label="atomic_type"]
  96 -> 53 [style=dashed label="numeric_type"]
  97 [label="97\nstatement -> assignment_expression \"new line\" ."]
  98 [label="98\nstatement -> init_expression \"new line\" ."]
  99 [label="99\nassignment_expression -> data \"+=\" . data"]
  99 -> 21 [style=solid label="\"Float\""]
  99 -> 22 [style=solid label="\"Int\""]
  99 -> 23 [style=solid label="\"Char\""]
  99 -> 24 [style=solid label="\"bool\""]
  99 -> 25 [style=solid label="\"String\""]
  99 -> 26 [style=solid label="\"function id\""]
  99 -> 69 [style=solid label="\"id\""]
  99 -> 30 [style=solid label="'<'"]
  99 -> 32 [style=solid label="'('"]
  99 -> 33 [style=dashed label="fuction_call"]
  99 -> 40 [style=dashed label="paren_expr"]
  99 -> 48 [style=dashed label="init_list_row"]
  99 -> 49 [style=dashed label="index"]
  99 -> 143 [style=dashed label="data"]
  99 -> 51 [style=dashed label="list_type"]
  99 -> 52 [style=dashed label="atomic_type"]
  99 -> 53 [style=dashed label="numeric_type"]
  100 [label="100\nassignment_expression -> data \"-=\" . data"]
  100 -> 21 [style=solid label="\"Float\""]
  100 -> 22 [style=solid label="\"Int\""]
  100 -> 23 [style=solid label="\"Char\""]
  100 -> 24 [style=solid label="\"bool\""]
  100 -> 25 [style=solid label="\"String\""]
  100 -> 26 [style=solid label="\"function id\""]
  100 -> 69 [style=solid label="\"id\""]
  100 -> 30 [style=solid label="'<'"]
  100 -> 32 [style=solid label="'('"]
  100 -> 33 [style=dashed label="fuction_call"]
  100 -> 40 [style=dashed label="paren_expr"]
  100 -> 48 [style=dashed label="init_list_row"]
  100 -> 49 [style=dashed label="index"]
  100 -> 144 [style=dashed label="data"]
  100 -> 51 [style=dashed label="list_type"]
  100 -> 52 [style=dashed label="atomic_type"]
  100 -> 53 [style=dashed label="numeric_type"]
  101 [label="101\nassignment_expression -> data \"*=\" . data"]
  101 -> 21 [style=solid label="\"Float\""]
  101 -> 22 [style=solid label="\"Int\""]
  101 -> 23 [style=solid label="\"Char\""]
  101 -> 24 [style=solid label="\"bool\""]
  101 -> 25 [style=solid label="\"String\""]
  101 -> 26 [style=solid label="\"function id\""]
  101 -> 69 [style=solid label="\"id\""]
  101 -> 30 [style=solid label="'<'"]
  101 -> 32 [style=solid label="'('"]
  101 -> 33 [style=dashed label="fuction_call"]
  101 -> 40 [style=dashed label="paren_expr"]
  101 -> 48 [style=dashed label="init_list_row"]
  101 -> 49 [style=dashed label="index"]
  101 -> 145 [style=dashed label="data"]
  101 -> 51 [style=dashed label="list_type"]
  101 -> 52 [style=dashed label="atomic_type"]
  101 -> 53 [style=dashed label="numeric_type"]
  102 [label="102\nassignment_expression -> data \"/=\" . data"]
  102 -> 21 [style=solid label="\"Float\""]
  102 -> 22 [style=solid label="\"Int\""]
  102 -> 23 [style=solid label="\"Char\""]
  102 -> 24 [style=solid label="\"bool\""]
  102 -> 25 [style=solid label="\"String\""]
  102 -> 26 [style=solid label="\"function id\""]
  102 -> 69 [style=solid label="\"id\""]
  102 -> 30 [style=solid label="'<'"]
  102 -> 32 [style=solid label="'('"]
  102 -> 33 [style=dashed label="fuction_call"]
  102 -> 40 [style=dashed label="paren_expr"]
  102 -> 48 [style=dashed label="init_list_row"]
  102 -> 49 [style=dashed label="index"]
  102 -> 146 [style=dashed label="data"]
  102 -> 51 [style=dashed label="list_type"]
  102 -> 52 [style=dashed label="atomic_type"]
  102 -> 53 [style=dashed label="numeric_type"]
  103 [label="103\nassignment_expression -> data \"%=\" . data"]
  103 -> 21 [style=solid label="\"Float\""]
  103 -> 22 [style=solid label="\"Int\""]
  103 -> 23 [style=solid label="\"Char\""]
  103 -> 24 [style=solid label="\"bool\""]
  103 -> 25 [style=solid label="\"String\""]
  103 -> 26 [style=solid label="\"function id\""]
  103 -> 69 [style=solid label="\"id\""]
  103 -> 30 [style=solid label="'<'"]
  103 -> 32 [style=solid label="'('"]
  103 -> 33 [style=dashed label="fuction_call"]
  103 -> 40 [style=dashed label="paren_expr"]
  103 -> 48 [style=dashed label="init_list_row"]
  103 -> 49 [style=dashed label="index"]
  103 -> 147 [style=dashed label="data"]
  103 -> 51 [style=dashed label="list_type"]
  103 -> 52 [style=dashed label="atomic_type"]
  103 -> 53 [style=dashed label="numeric_type"]
  104 [label="104\nassignment_expression -> data \"++\" ."]
  105 [label="105\nassignment_expression -> data \"--\" ."]
  106 [label="106\nassignment_expression -> data '=' . data"]
  106 -> 21 [style=solid label="\"Float\""]
  106 -> 22 [style=solid label="\"Int\""]
  106 -> 23 [style=solid label="\"Char\""]
  106 -> 24 [style=solid label="\"bool\""]
  106 -> 25 [style=solid label="\"String\""]
  106 -> 26 [style=solid label="\"function id\""]
  106 -> 69 [style=solid label="\"id\""]
  106 -> 30 [style=solid label="'<'"]
  106 -> 32 [style=solid label="'('"]
  106 -> 33 [style=dashed label="fuction_call"]
  106 -> 40 [style=dashed label="paren_expr"]
  106 -> 48 [style=dashed label="init_list_row"]
  106 -> 49 [style=dashed label="index"]
  106 -> 148 [style=dashed label="data"]
  106 -> 51 [style=dashed label="list_type"]
  106 -> 52 [style=dashed label="atomic_type"]
  106 -> 53 [style=dashed label="numeric_type"]
  107 [label="107\nargument_list -> \"id\" ."]
  108 [label="108\nfunction -> \"Function\" \"function id\" '(' ')' . construction"]
  108 -> 7 [style=solid label="\"{\""]
  108 -> 149 [style=dashed label="construction"]
  109 [label="109\nfunction -> \"Function\" \"function id\" '(' argument_list . ')' construction\nargument_list -> argument_list . ',' \"id\""]
  109 -> 150 [style=solid label="')'"]
  109 -> 151 [style=solid label="','"]
  110 [label="110\nstatement -> \"Return\" '(' data . ')' \"new line\""]
  110 -> 152 [style=solid label="')'"]
  111 [label="111\nstatement -> \"Read\" '(' data . ')' \"new line\""]
  111 -> 153 [style=solid label="')'"]
  112 [label="112\nstatement -> \"Print\" '(' data . ')' \"new line\""]
  112 -> 154 [style=solid label="')'"]
  113 [label="113\nwhile_statement -> \"Do\" construction \"While\" . '(' bool_expression ')' \"new line\""]
  113 -> 155 [style=solid label="'('"]
  114 [label="114\nwhile_statement -> \"While\" '(' bool_expression . ')' construction\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  114 -> 89 [style=solid label="\"Or\""]
  114 -> 90 [style=solid label="\"And\""]
  114 -> 91 [style=solid label="\"<=\""]
  114 -> 92 [style=solid label="\">=\""]
  114 -> 93 [style=solid label="\"==\""]
  114 -> 94 [style=solid label="\"!=\""]
  114 -> 95 [style=solid label="'<'"]
  114 -> 96 [style=solid label="'>'"]
  114 -> 156 [style=solid label="')'"]
  115 [label="115\nfor_statement -> \"For\" '(' \"id\" . '=' numeric_type ',' bool_expression ',' assignment_expression ')' construction\nfor_statement -> \"For\" '(' \"id\" . ',' bool_expression ',' assignment_expression ')' construction"]
  115 -> 157 [style=solid label="'='"]
  115 -> 158 [style=solid label="','"]
  116 [label="116\none_if_statement -> \"If\" '(' bool_expression . ')' construction\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  116 -> 89 [style=solid label="\"Or\""]
  116 -> 90 [style=solid label="\"And\""]
  116 -> 91 [style=solid label="\"<=\""]
  116 -> 92 [style=solid label="\">=\""]
  116 -> 93 [style=solid label="\"==\""]
  116 -> 94 [style=solid label="\"!=\""]
  116 -> 95 [style=solid label="'<'"]
  116 -> 96 [style=solid label="'>'"]
  116 -> 159 [style=solid label="')'"]
  117 [label="117\nassignment_expression -> \"Const\" \"id\" '=' . data"]
  117 -> 21 [style=solid label="\"Float\""]
  117 -> 22 [style=solid label="\"Int\""]
  117 -> 23 [style=solid label="\"Char\""]
  117 -> 24 [style=solid label="\"bool\""]
  117 -> 25 [style=solid label="\"String\""]
  117 -> 26 [style=solid label="\"function id\""]
  117 -> 69 [style=solid label="\"id\""]
  117 -> 30 [style=solid label="'<'"]
  117 -> 32 [style=solid label="'('"]
  117 -> 33 [style=dashed label="fuction_call"]
  117 -> 40 [style=dashed label="paren_expr"]
  117 -> 48 [style=dashed label="init_list_row"]
  117 -> 49 [style=dashed label="index"]
  117 -> 160 [style=dashed label="data"]
  117 -> 51 [style=dashed label="list_type"]
  117 -> 52 [style=dashed label="atomic_type"]
  117 -> 53 [style=dashed label="numeric_type"]
  118 [label="118\nfuction_call -> \"function id\" '(' list_row . ')'\nlist_row -> list_row . ',' data"]
  118 -> 161 [style=solid label="')'"]
  118 -> 124 [style=solid label="','"]
  119 [label="119\narithmetic_expression -> arithmetic_expression . '+' data\narithmetic_expression -> arithmetic_expression . '-' data\narithmetic_expression -> arithmetic_expression . '*' data\narithmetic_expression -> arithmetic_expression . '/' data\narithmetic_expression -> arithmetic_expression . '%' data\nlist_init_expression -> \"id\" '(' arithmetic_expression . ')' of_type\nstring_init_expression -> \"id\" '(' arithmetic_expression . ')'"]
  119 -> 84 [style=solid label="'+'"]
  119 -> 85 [style=solid label="'-'"]
  119 -> 86 [style=solid label="'*'"]
  119 -> 87 [style=solid label="'/'"]
  119 -> 88 [style=solid label="'%'"]
  119 -> 162 [style=solid label="')'"]
  120 [label="120\narithmetic_expression -> data ."]
  121 [label="121\narithmetic_expression -> arithmetic_expression . '+' data\narithmetic_expression -> arithmetic_expression . '-' data\narithmetic_expression -> arithmetic_expression . '*' data\narithmetic_expression -> arithmetic_expression . '/' data\narithmetic_expression -> arithmetic_expression . '%' data\none_dimensional_index -> '[' arithmetic_expression . ']'"]
  121 -> 84 [style=solid label="'+'"]
  121 -> 85 [style=solid label="'-'"]
  121 -> 86 [style=solid label="'*'"]
  121 -> 87 [style=solid label="'/'"]
  121 -> 88 [style=solid label="'%'"]
  121 -> 163 [style=solid label="']'"]
  122 [label="122\nmultidimensional_index -> multidimensional_index one_dimensional_index ."]
  123 [label="123\ninit_list_row -> '<' list_row '>' ."]
  124 [label="124\nlist_row -> list_row ',' . data"]
  124 -> 21 [style=solid label="\"Float\""]
  124 -> 22 [style=solid label="\"Int\""]
  124 -> 23 [style=solid label="\"Char\""]
  124 -> 24 [style=solid label="\"bool\""]
  124 -> 25 [style=solid label="\"String\""]
  124 -> 26 [style=solid label="\"function id\""]
  124 -> 69 [style=solid label="\"id\""]
  124 -> 30 [style=solid label="'<'"]
  124 -> 32 [style=solid label="'('"]
  124 -> 33 [style=dashed label="fuction_call"]
  124 -> 40 [style=dashed label="paren_expr"]
  124 -> 48 [style=dashed label="init_list_row"]
  124 -> 49 [style=dashed label="index"]
  124 -> 164 [style=dashed label="data"]
  124 -> 51 [style=dashed label="list_type"]
  124 -> 52 [style=dashed label="atomic_type"]
  124 -> 53 [style=dashed label="numeric_type"]
  125 [label="125\nparen_expr -> '(' expression ')' ."]
  126 [label="126\none_else_statement -> \"Else\" construction ."]
  127 [label="127\none_elif_statement -> \"Elif\" '(' . bool_expression ')' construction"]
  127 -> 21 [style=solid label="\"Float\""]
  127 -> 22 [style=solid label="\"Int\""]
  127 -> 23 [style=solid label="\"Char\""]
  127 -> 24 [style=solid label="\"bool\""]
  127 -> 25 [style=solid label="\"String\""]
  127 -> 26 [style=solid label="\"function id\""]
  127 -> 69 [style=solid label="\"id\""]
  127 -> 30 [style=solid label="'<'"]
  127 -> 31 [style=solid label="'!'"]
  127 -> 32 [style=solid label="'('"]
  127 -> 33 [style=dashed label="fuction_call"]
  127 -> 40 [style=dashed label="paren_expr"]
  127 -> 165 [style=dashed label="bool_expression"]
  127 -> 48 [style=dashed label="init_list_row"]
  127 -> 49 [style=dashed label="index"]
  127 -> 73 [style=dashed label="data"]
  127 -> 51 [style=dashed label="list_type"]
  127 -> 52 [style=dashed label="atomic_type"]
  127 -> 53 [style=dashed label="numeric_type"]
  128 [label="128\nelif_statement -> elif_statement one_elif_statement ."]
  129 [label="129\nif_statement -> one_if_statement elif_statement one_else_statement ."]
  130 [label="130\narithmetic_expression -> arithmetic_expression '+' data ."]
  131 [label="131\narithmetic_expression -> arithmetic_expression '-' data ."]
  132 [label="132\narithmetic_expression -> arithmetic_expression '*' data ."]
  133 [label="133\narithmetic_expression -> arithmetic_expression '/' data ."]
  134 [label="134\narithmetic_expression -> arithmetic_expression '%' data ."]
  135 [label="135\nbool_expression -> bool_expression \"Or\" data ."]
  136 [label="136\nbool_expression -> bool_expression \"And\" data ."]
  137 [label="137\nbool_expression -> bool_expression \"<=\" data ."]
  138 [label="138\nbool_expression -> bool_expression \">=\" data ."]
  139 [label="139\nbool_expression -> bool_expression \"==\" data ."]
  140 [label="140\nbool_expression -> bool_expression \"!=\" data ."]
  141 [label="141\nbool_expression -> bool_expression '<' data ."]
  142 [label="142\nbool_expression -> bool_expression '>' data ."]
  143 [label="143\nassignment_expression -> data \"+=\" data ."]
  144 [label="144\nassignment_expression -> data \"-=\" data ."]
  145 [label="145\nassignment_expression -> data \"*=\" data ."]
  146 [label="146\nassignment_expression -> data \"/=\" data ."]
  147 [label="147\nassignment_expression -> data \"%=\" data ."]
  148 [label="148\nassignment_expression -> data '=' data ."]
  149 [label="149\nfunction -> \"Function\" \"function id\" '(' ')' construction ."]
  150 [label="150\nfunction -> \"Function\" \"function id\" '(' argument_list ')' . construction"]
  150 -> 7 [style=solid label="\"{\""]
  150 -> 166 [style=dashed label="construction"]
  151 [label="151\nargument_list -> argument_list ',' . \"id\""]
  151 -> 167 [style=solid label="\"id\""]
  152 [label="152\nstatement -> \"Return\" '(' data ')' . \"new line\""]
  152 -> 168 [style=solid label="\"new line\""]
  153 [label="153\nstatement -> \"Read\" '(' data ')' . \"new line\""]
  153 -> 169 [style=solid label="\"new line\""]
  154 [label="154\nstatement -> \"Print\" '(' data ')' . \"new line\""]
  154 -> 170 [style=solid label="\"new line\""]
  155 [label="155\nwhile_statement -> \"Do\" construction \"While\" '(' . bool_expression ')' \"new line\""]
  155 -> 21 [style=solid label="\"Float\""]
  155 -> 22 [style=solid label="\"Int\""]
  155 -> 23 [style=solid label="\"Char\""]
  155 -> 24 [style=solid label="\"bool\""]
  155 -> 25 [style=solid label="\"String\""]
  155 -> 26 [style=solid label="\"function id\""]
  155 -> 69 [style=solid label="\"id\""]
  155 -> 30 [style=solid label="'<'"]
  155 -> 31 [style=solid label="'!'"]
  155 -> 32 [style=solid label="'('"]
  155 -> 33 [style=dashed label="fuction_call"]
  155 -> 40 [style=dashed label="paren_expr"]
  155 -> 171 [style=dashed label="bool_expression"]
  155 -> 48 [style=dashed label="init_list_row"]
  155 -> 49 [style=dashed label="index"]
  155 -> 73 [style=dashed label="data"]
  155 -> 51 [style=dashed label="list_type"]
  155 -> 52 [style=dashed label="atomic_type"]
  155 -> 53 [style=dashed label="numeric_type"]
  156 [label="156\nwhile_statement -> \"While\" '(' bool_expression ')' . construction"]
  156 -> 7 [style=solid label="\"{\""]
  156 -> 172 [style=dashed label="construction"]
  157 [label="157\nfor_statement -> \"For\" '(' \"id\" '=' . numeric_type ',' bool_expression ',' assignment_expression ')' construction"]
  157 -> 21 [style=solid label="\"Float\""]
  157 -> 22 [style=solid label="\"Int\""]
  157 -> 173 [style=dashed label="numeric_type"]
  158 [label="158\nfor_statement -> \"For\" '(' \"id\" ',' . bool_expression ',' assignment_expression ')' construction"]
  158 -> 21 [style=solid label="\"Float\""]
  158 -> 22 [style=solid label="\"Int\""]
  158 -> 23 [style=solid label="\"Char\""]
  158 -> 24 [style=solid label="\"bool\""]
  158 -> 25 [style=solid label="\"String\""]
  158 -> 26 [style=solid label="\"function id\""]
  158 -> 69 [style=solid label="\"id\""]
  158 -> 30 [style=solid label="'<'"]
  158 -> 31 [style=solid label="'!'"]
  158 -> 32 [style=solid label="'('"]
  158 -> 33 [style=dashed label="fuction_call"]
  158 -> 40 [style=dashed label="paren_expr"]
  158 -> 174 [style=dashed label="bool_expression"]
  158 -> 48 [style=dashed label="init_list_row"]
  158 -> 49 [style=dashed label="index"]
  158 -> 73 [style=dashed label="data"]
  158 -> 51 [style=dashed label="list_type"]
  158 -> 52 [style=dashed label="atomic_type"]
  158 -> 53 [style=dashed label="numeric_type"]
  159 [label="159\none_if_statement -> \"If\" '(' bool_expression ')' . construction"]
  159 -> 7 [style=solid label="\"{\""]
  159 -> 175 [style=dashed label="construction"]
  160 [label="160\nassignment_expression -> \"Const\" \"id\" '=' data ."]
  161 [label="161\nfuction_call -> \"function id\" '(' list_row ')' ."]
  162 [label="162\nlist_init_expression -> \"id\" '(' arithmetic_expression ')' . of_type\nstring_init_expression -> \"id\" '(' arithmetic_expression ')' ."]
  162 -> 176 [style=solid label="\"Of\""]
  162 -> 177 [style=dashed label="of_type"]
  162 -> 178 [style=dashed label="of_list"]
  163 [label="163\none_dimensional_index -> '[' arithmetic_expression ']' ."]
  164 [label="164\nlist_row -> list_row ',' data ."]
  165 [label="165\none_elif_statement -> \"Elif\" '(' bool_expression . ')' construction\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  165 -> 89 [style=solid label="\"Or\""]
  165 -> 90 [style=solid label="\"And\""]
  165 -> 91 [style=solid label="\"<=\""]
  165 -> 92 [style=solid label="\">=\""]
  165 -> 93 [style=solid label="\"==\""]
  165 -> 94 [style=solid label="\"!=\""]
  165 -> 95 [style=solid label="'<'"]
  165 -> 96 [style=solid label="'>'"]
  165 -> 179 [style=solid label="')'"]
  166 [label="166\nfunction -> \"Function\" \"function id\" '(' argument_list ')' construction ."]
  167 [label="167\nargument_list -> argument_list ',' \"id\" ."]
  168 [label="168\nstatement -> \"Return\" '(' data ')' \"new line\" ."]
  169 [label="169\nstatement -> \"Read\" '(' data ')' \"new line\" ."]
  170 [label="170\nstatement -> \"Print\" '(' data ')' \"new line\" ."]
  171 [label="171\nwhile_statement -> \"Do\" construction \"While\" '(' bool_expression . ')' \"new line\"\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  171 -> 89 [style=solid label="\"Or\""]
  171 -> 90 [style=solid label="\"And\""]
  171 -> 91 [style=solid label="\"<=\""]
  171 -> 92 [style=solid label="\">=\""]
  171 -> 93 [style=solid label="\"==\""]
  171 -> 94 [style=solid label="\"!=\""]
  171 -> 95 [style=solid label="'<'"]
  171 -> 96 [style=solid label="'>'"]
  171 -> 180 [style=solid label="')'"]
  172 [label="172\nwhile_statement -> \"While\" '(' bool_expression ')' construction ."]
  173 [label="173\nfor_statement -> \"For\" '(' \"id\" '=' numeric_type . ',' bool_expression ',' assignment_expression ')' construction"]
  173 -> 181 [style=solid label="','"]
  174 [label="174\nfor_statement -> \"For\" '(' \"id\" ',' bool_expression . ',' assignment_expression ')' construction\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  174 -> 89 [style=solid label="\"Or\""]
  174 -> 90 [style=solid label="\"And\""]
  174 -> 91 [style=solid label="\"<=\""]
  174 -> 92 [style=solid label="\">=\""]
  174 -> 93 [style=solid label="\"==\""]
  174 -> 94 [style=solid label="\"!=\""]
  174 -> 95 [style=solid label="'<'"]
  174 -> 96 [style=solid label="'>'"]
  174 -> 182 [style=solid label="','"]
  175 [label="175\none_if_statement -> \"If\" '(' bool_expression ')' construction ."]
  176 [label="176\nof_type -> \"Of\" . \"type name\"\nof_list -> \"Of\" . \"List\" '(' arithmetic_expression ')'"]
  176 -> 183 [style=solid label="\"List\""]
  176 -> 184 [style=solid label="\"type name\""]
  177 [label="177\nlist_init_expression -> \"id\" '(' arithmetic_expression ')' of_type ."]
  178 [label="178\nof_type -> of_list . \"Of\" \"type name\"\nof_list -> of_list . \"Of\" \"List\" '(' arithmetic_expression ')'"]
  178 -> 185 [style=solid label="\"Of\""]
  179 [label="179\none_elif_statement -> \"Elif\" '(' bool_expression ')' . construction"]
  179 -> 7 [style=solid label="\"{\""]
  179 -> 186 [style=dashed label="construction"]
  180 [label="180\nwhile_statement -> \"Do\" construction \"While\" '(' bool_expression ')' . \"new line\""]
  180 -> 187 [style=solid label="\"new line\""]
  181 [label="181\nfor_statement -> \"For\" '(' \"id\" '=' numeric_type ',' . bool_expression ',' assignment_expression ')' construction"]
  181 -> 21 [style=solid label="\"Float\""]
  181 -> 22 [style=solid label="\"Int\""]
  181 -> 23 [style=solid label="\"Char\""]
  181 -> 24 [style=solid label="\"bool\""]
  181 -> 25 [style=solid label="\"String\""]
  181 -> 26 [style=solid label="\"function id\""]
  181 -> 69 [style=solid label="\"id\""]
  181 -> 30 [style=solid label="'<'"]
  181 -> 31 [style=solid label="'!'"]
  181 -> 32 [style=solid label="'('"]
  181 -> 33 [style=dashed label="fuction_call"]
  181 -> 40 [style=dashed label="paren_expr"]
  181 -> 188 [style=dashed label="bool_expression"]
  181 -> 48 [style=dashed label="init_list_row"]
  181 -> 49 [style=dashed label="index"]
  181 -> 73 [style=dashed label="data"]
  181 -> 51 [style=dashed label="list_type"]
  181 -> 52 [style=dashed label="atomic_type"]
  181 -> 53 [style=dashed label="numeric_type"]
  182 [label="182\nfor_statement -> \"For\" '(' \"id\" ',' bool_expression ',' . assignment_expression ')' construction"]
  182 -> 20 [style=solid label="\"Const\""]
  182 -> 21 [style=solid label="\"Float\""]
  182 -> 22 [style=solid label="\"Int\""]
  182 -> 23 [style=solid label="\"Char\""]
  182 -> 24 [style=solid label="\"bool\""]
  182 -> 25 [style=solid label="\"String\""]
  182 -> 26 [style=solid label="\"function id\""]
  182 -> 69 [style=solid label="\"id\""]
  182 -> 30 [style=solid label="'<'"]
  182 -> 32 [style=solid label="'('"]
  182 -> 33 [style=dashed label="fuction_call"]
  182 -> 40 [style=dashed label="paren_expr"]
  182 -> 189 [style=dashed label="assignment_expression"]
  182 -> 48 [style=dashed label="init_list_row"]
  182 -> 49 [style=dashed label="index"]
  182 -> 190 [style=dashed label="data"]
  182 -> 51 [style=dashed label="list_type"]
  182 -> 52 [style=dashed label="atomic_type"]
  182 -> 53 [style=dashed label="numeric_type"]
  183 [label="183\nof_list -> \"Of\" \"List\" . '(' arithmetic_expression ')'"]
  183 -> 191 [style=solid label="'('"]
  184 [label="184\nof_type -> \"Of\" \"type name\" ."]
  185 [label="185\nof_type -> of_list \"Of\" . \"type name\"\nof_list -> of_list \"Of\" . \"List\" '(' arithmetic_expression ')'"]
  185 -> 192 [style=solid label="\"List\""]
  185 -> 193 [style=solid label="\"type name\""]
  186 [label="186\none_elif_statement -> \"Elif\" '(' bool_expression ')' construction ."]
  187 [label="187\nwhile_statement -> \"Do\" construction \"While\" '(' bool_expression ')' \"new line\" ."]
  188 [label="188\nfor_statement -> \"For\" '(' \"id\" '=' numeric_type ',' bool_expression . ',' assignment_expression ')' construction\nbool_expression -> bool_expression . '>' data\nbool_expression -> bool_expression . '<' data\nbool_expression -> bool_expression . \">=\" data\nbool_expression -> bool_expression . \"<=\" data\nbool_expression -> bool_expression . \"==\" data\nbool_expression -> bool_expression . \"!=\" data\nbool_expression -> bool_expression . \"And\" data\nbool_expression -> bool_expression . \"Or\" data"]
  188 -> 89 [style=solid label="\"Or\""]
  188 -> 90 [style=solid label="\"And\""]
  188 -> 91 [style=solid label="\"<=\""]
  188 -> 92 [style=solid label="\">=\""]
  188 -> 93 [style=solid label="\"==\""]
  188 -> 94 [style=solid label="\"!=\""]
  188 -> 95 [style=solid label="'<'"]
  188 -> 96 [style=solid label="'>'"]
  188 -> 194 [style=solid label="','"]
  189 [label="189\nfor_statement -> \"For\" '(' \"id\" ',' bool_expression ',' assignment_expression . ')' construction"]
  189 -> 195 [style=solid label="')'"]
  190 [label="190\nassignment_expression -> data . '=' data\nassignment_expression -> data . \"+=\" data\nassignment_expression -> data . \"-=\" data\nassignment_expression -> data . \"/=\" data\nassignment_expression -> data . \"*=\" data\nassignment_expression -> data . \"%=\" data\nassignment_expression -> data . \"++\"\nassignment_expression -> data . \"--\""]
  190 -> 99 [style=solid label="\"+=\""]
  190 -> 100 [style=solid label="\"-=\""]
  190 -> 101 [style=solid label="\"*=\""]
  190 -> 102 [style=solid label="\"/=\""]
  190 -> 103 [style=solid label="\"%=\""]
  190 -> 104 [style=solid label="\"++\""]
  190 -> 105 [style=solid label="\"--\""]
  190 -> 106 [style=solid label="'='"]
  191 [label="191\nof_list -> \"Of\" \"List\" '(' . arithmetic_expression ')'"]
  191 -> 21 [style=solid label="\"Float\""]
  191 -> 22 [style=solid label="\"Int\""]
  191 -> 23 [style=solid label="\"Char\""]
  191 -> 24 [style=solid label="\"bool\""]
  191 -> 25 [style=solid label="\"String\""]
  191 -> 26 [style=solid label="\"function id\""]
  191 -> 69 [style=solid label="\"id\""]
  191 -> 30 [style=solid label="'<'"]
  191 -> 32 [style=solid label="'('"]
  191 -> 33 [style=dashed label="fuction_call"]
  191 -> 40 [style=dashed label="paren_expr"]
  191 -> 196 [style=dashed label="arithmetic_expression"]
  191 -> 48 [style=dashed label="init_list_row"]
  191 -> 49 [style=dashed label="index"]
  191 -> 120 [style=dashed label="data"]
  191 -> 51 [style=dashed label="list_type"]
  191 -> 52 [style=dashed label="atomic_type"]
  191 -> 53 [style=dashed label="numeric_type"]
  192 [label="192\nof_list -> of_list \"Of\" \"List\" . '(' arithmetic_expression ')'"]
  192 -> 197 [style=solid label="'('"]
  193 [label="193\nof_type -> of_list \"Of\" \"type name\" ."]
  194 [label="194\nfor_statement -> \"For\" '(' \"id\" '=' numeric_type ',' bool_expression ',' . assignment_expression ')' construction"]
  194 -> 20 [style=solid label="\"Const\""]
  194 -> 21 [style=solid label="\"Float\""]
  194 -> 22 [style=solid label="\"Int\""]
  194 -> 23 [style=solid label="\"Char\""]
  194 -> 24 [style=solid label="\"bool\""]
  194 -> 25 [style=solid label="\"String\""]
  194 -> 26 [style=solid label="\"function id\""]
  194 -> 69 [style=solid label="\"id\""]
  194 -> 30 [style=solid label="'<'"]
  194 -> 32 [style=solid label="'('"]
  194 -> 33 [style=dashed label="fuction_call"]
  194 -> 40 [style=dashed label="paren_expr"]
  194 -> 198 [style=dashed label="assignment_expression"]
  194 -> 48 [style=dashed label="init_list_row"]
  194 -> 49 [style=dashed label="index"]
  194 -> 190 [style=dashed label="data"]
  194 -> 51 [style=dashed label="list_type"]
  194 -> 52 [style=dashed label="atomic_type"]
  194 -> 53 [style=dashed label="numeric_type"]
  195 [label="195\nfor_statement -> \"For\" '(' \"id\" ',' bool_expression ',' assignment_expression ')' . construction"]
  195 -> 7 [style=solid label="\"{\""]
  195 -> 199 [style=dashed label="construction"]
  196 [label="196\narithmetic_expression -> arithmetic_expression . '+' data\narithmetic_expression -> arithmetic_expression . '-' data\narithmetic_expression -> arithmetic_expression . '*' data\narithmetic_expression -> arithmetic_expression . '/' data\narithmetic_expression -> arithmetic_expression . '%' data\nof_list -> \"Of\" \"List\" '(' arithmetic_expression . ')'"]
  196 -> 84 [style=solid label="'+'"]
  196 -> 85 [style=solid label="'-'"]
  196 -> 86 [style=solid label="'*'"]
  196 -> 87 [style=solid label="'/'"]
  196 -> 88 [style=solid label="'%'"]
  196 -> 200 [style=solid label="')'"]
  197 [label="197\nof_list -> of_list \"Of\" \"List\" '(' . arithmetic_expression ')'"]
  197 -> 21 [style=solid label="\"Float\""]
  197 -> 22 [style=solid label="\"Int\""]
  197 -> 23 [style=solid label="\"Char\""]
  197 -> 24 [style=solid label="\"bool\""]
  197 -> 25 [style=solid label="\"String\""]
  197 -> 26 [style=solid label="\"function id\""]
  197 -> 69 [style=solid label="\"id\""]
  197 -> 30 [style=solid label="'<'"]
  197 -> 32 [style=solid label="'('"]
  197 -> 33 [style=dashed label="fuction_call"]
  197 -> 40 [style=dashed label="paren_expr"]
  197 -> 201 [style=dashed label="arithmetic_expression"]
  197 -> 48 [style=dashed label="init_list_row"]
  197 -> 49 [style=dashed label="index"]
  197 -> 120 [style=dashed label="data"]
  197 -> 51 [style=dashed label="list_type"]
  197 -> 52 [style=dashed label="atomic_type"]
  197 -> 53 [style=dashed label="numeric_type"]
  198 [label="198\nfor_statement -> \"For\" '(' \"id\" '=' numeric_type ',' bool_expression ',' assignment_expression . ')' construction"]
  198 -> 202 [style=solid label="')'"]
  199 [label="199\nfor_statement -> \"For\" '(' \"id\" ',' bool_expression ',' assignment_expression ')' construction ."]
  200 [label="200\nof_list -> \"Of\" \"List\" '(' arithmetic_expression ')' ."]
  201 [label="201\narithmetic_expression -> arithmetic_expression . '+' data\narithmetic_expression -> arithmetic_expression . '-' data\narithmetic_expression -> arithmetic_expression . '*' data\narithmetic_expression -> arithmetic_expression . '/' data\narithmetic_expression -> arithmetic_expression . '%' data\nof_list -> of_list \"Of\" \"List\" '(' arithmetic_expression . ')'"]
  201 -> 84 [style=solid label="'+'"]
  201 -> 85 [style=solid label="'-'"]
  201 -> 86 [style=solid label="'*'"]
  201 -> 87 [style=solid label="'/'"]
  201 -> 88 [style=solid label="'%'"]
  201 -> 203 [style=solid label="')'"]
  202 [label="202\nfor_statement -> \"For\" '(' \"id\" '=' numeric_type ',' bool_expression ',' assignment_expression ')' . construction"]
  202 -> 7 [style=solid label="\"{\""]
  202 -> 204 [style=dashed label="construction"]
  203 [label="203\nof_list -> of_list \"Of\" \"List\" '(' arithmetic_expression ')' ."]
  204 [label="204\nfor_statement -> \"For\" '(' \"id\" '=' numeric_type ',' bool_expression ',' assignment_expression ')' construction ."]
}
